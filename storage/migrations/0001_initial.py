# Generated by Django 5.1.2 on 2024-10-23 22:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessLevels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(blank=True, choices=[('admin', 'Администратор'), ('manager', 'Менеджер'), ('storage', 'Склад'), ('purchase', 'Закупка'), ('engineer', 'ИТР/Планировщик')], max_length=50, null=True, verbose_name='Уровень доступа')),
            ],
            options={
                'verbose_name': 'доступ',
                'verbose_name_plural': 'доступы',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Категория товара')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
            },
        ),
        migrations.CreateModel(
            name='PivotTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Сводная таблица',
                'verbose_name_plural': 'Сводная таблица',
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_name', models.CharField(blank=True, null=True, verbose_name='Поставщик')),
                ('inn', models.CharField(blank=True, max_length=50, null=True, verbose_name='ИНН')),
                ('ogrn', models.CharField(blank=True, max_length=50, null=True, verbose_name='ОГРН')),
                ('address', models.CharField(blank=True, null=True, verbose_name='Адрес')),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True, verbose_name='Контактное лицо')),
                ('website', models.CharField(blank=True, max_length=255, null=True, verbose_name='Web')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телефон')),
                ('tg', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телеграм')),
            ],
            options={
                'verbose_name': 'поставщик',
                'verbose_name_plural': 'поставщики',
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя Фамилия')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('tg', models.CharField(blank=True, max_length=50, null=True, verbose_name='Телеграм')),
                ('department', models.CharField(choices=[('Склад', 'Склад'), ('Офис', 'Офис'), ('Монтаж', 'Монтаж'), ('Инженерный', 'Инженерный'), ('3D', '3D'), ('Снабжение', 'Снабжение'), ('AXO', 'AXO'), ('ПДО', 'ПДО'), ('ЧПУ', 'ЧПУ'), ('Столярный', 'Столярный'), ('Макетный', 'Макетный'), ('Малярный', 'Малярный'), ('Художественный', 'Художественный'), ('Сборочный', 'Сборочный')], max_length=50, verbose_name='Отдел/Цех')),
                ('position_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность')),
                ('access_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='storage.accesslevels')),
            ],
            options={
                'verbose_name': 'сотрудник',
                'verbose_name_plural': 'сотрудники',
            },
        ),
        migrations.CreateModel(
            name='ProductRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateField(auto_now_add=True, verbose_name='Дата запроса')),
                ('order_about', models.CharField(blank=True, null=True, verbose_name='Комментарий')),
                ('order_quantity', models.IntegerField(blank=True, null=True, verbose_name='Количество')),
                ('delivery_location', models.CharField(choices=[('Склад', 'Склад'), ('Офис', 'Офис'), ('Цех', 'Цех'), ('Монтаж', 'Монтаж'), ('Подрядчик', 'Подрядчик'), ('Заказчик', 'Заказчик'), ('Инженерный', 'Инженерный'), ('3D', '3D'), ('Снабжение', 'Снабжение'), ('AXO', 'AXO'), ('ПДО', 'ПДО'), ('ЧПУ', 'ЧПУ'), ('Столярный', 'Столярный'), ('Макетный', 'Макетный'), ('Малярный', 'Малярный'), ('Художественный', 'Художественный'), ('Сборочный', 'Сборочный')], max_length=30, verbose_name='Куда везем?')),
                ('delivery_address', models.CharField(blank=True, null=True, verbose_name='Адрес')),
                ('deadline_delivery_date', models.DateField(blank=True, null=True, verbose_name='Требуемая дата поставки')),
                ('responsible_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.employees', verbose_name='Ответственный')),
            ],
            options={
                'verbose_name': 'запрос на закуп',
                'verbose_name_plural': 'запросы на закуп',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(auto_now_add=True, verbose_name='Дата заказа')),
                ('accounted_in_1c', models.BooleanField(blank=True, null=True, verbose_name='Учтено в 1С')),
                ('invoice_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер счета')),
                ('delivery_status', models.CharField(choices=[('Ожидаем', 'Ожидаем'), ('Доставлено', 'Доставлено'), ('Склад', 'Склад'), ('Неполная', 'Неполная'), ('Частичный возврат', 'Частичный возврат'), ('Полный возврат', 'Полный возврат')], max_length=50, verbose_name='Статус заказа')),
                ('documents', models.CharField(choices=[('Нет', 'Нет'), ('УПД/СФ', 'УПД/СФ'), ('TTH/TH/AKT', 'TTH/TH/AKT'), ('ИП', 'ИП')], max_length=50, verbose_name='Документы')),
                ('waiting_date', models.DateField(blank=True, null=True, verbose_name='Ожидаемая дата поставки')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.employees', verbose_name='Ответственный')),
                ('purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.productrequest', verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'заказ в закупку',
                'verbose_name_plural': 'заказы в закупку',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование')),
                ('product_link', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('product_sku', models.CharField(blank=True, max_length=100, null=True, verbose_name='Артикул')),
                ('packaging_unit', models.CharField(choices=[('уп.', 'уп.'), ('шт.', 'шт.'), ('кв.м', 'кв.м'), ('п.м.', 'п.м.'), ('кг', 'кг'), ('л', 'л'), ('мл', 'мл')], max_length=10, verbose_name='Единицы измерения')),
                ('quantity_in_package', models.IntegerField(blank=True, null=True, verbose_name='Количество в упаковке')),
                ('product_image', models.ImageField(upload_to='images/%Y/%m/%d/', verbose_name='Фото/скриншот')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.categories', verbose_name='Категория')),
                ('near_products', models.ManyToManyField(blank=True, to='storage.products', verbose_name='Похожие товары')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.suppliers', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'товарное наименование',
                'verbose_name_plural': 'товарные наименования',
            },
        ),
        migrations.AddField(
            model_name='productrequest',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.products', verbose_name='Наименование'),
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateField(auto_now_add=True, verbose_name='Дата записи')),
                ('project_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Проект')),
                ('detail_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Полное название изделия')),
                ('project_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Шифр проекта')),
                ('detail_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Изделие')),
                ('detail_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Шифр изделия')),
                ('engineer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='projects_engineer_set', to='storage.employees', verbose_name='Инженер')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.employees', verbose_name='Менеджер')),
            ],
            options={
                'verbose_name': 'проект',
                'verbose_name_plural': 'проекты',
            },
        ),
        migrations.AddField(
            model_name='productrequest',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.projects', verbose_name='Проект'),
        ),
        migrations.CreateModel(
            name='ProductMovies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_date', models.DateField(auto_now_add=True, verbose_name='Дата записи')),
                ('process_type', models.CharField(choices=[('Прием на склад', 'Прием на склад'), ('Выдача со склада', 'Выдача со склада'), ('Возврат на склад', 'Возврат на склад'), ('Возврат поставщику', 'Возврат поставщику'), ('Бронирование', 'Бронирование'), ('Перемещение в ячейку', 'Перемещение в ячейку')], max_length=50, verbose_name='Тип перемещения')),
                ('return_to_supplier_reason', models.CharField(blank=True, choices=[('Дефекты материалов', 'Дефекты материалов'), ('Дефекты изделий', 'Дефекты изделий'), ('Излишек', 'Излишек'), ('Несоответствие заказу', 'Несоответствие заказу'), ('Нарушение сроков поставки', 'Нарушение сроков поставки')], max_length=50, null=True, verbose_name='Причина возврата')),
                ('document_flow', models.CharField(choices=[('Нет', 'Нет'), ('ИП', 'ИП'), ('ЭДО', 'ЭДО'), ('Бумага', 'Бумага')], max_length=50, verbose_name='Документооборот')),
                ('movie_quantity', models.IntegerField(blank=True, null=True, verbose_name='Количество')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.employees', verbose_name='Для/от сотрудника')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.products', verbose_name='Наименование')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.projects', verbose_name='Для/из проекта')),
            ],
            options={
                'verbose_name': 'запись о перемещении товара',
                'verbose_name_plural': 'записи перемещении товаров',
            },
        ),
        migrations.CreateModel(
            name='StorageCells',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_date', models.DateField(auto_now_add=True, verbose_name='Дата размещения')),
                ('stock_quantity', models.IntegerField(blank=True, null=True, verbose_name='Количество')),
                ('cell_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес ячейки')),
                ('old_cell_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Предыдущий адрес')),
                ('process_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.productmovies', verbose_name='Источник поступления')),
            ],
            options={
                'verbose_name': 'адресная ячейка',
                'verbose_name_plural': 'адресные ячейки',
            },
        ),
        migrations.AddField(
            model_name='productmovies',
            name='from_cell',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='storage.storagecells', verbose_name='Адрес ячейки'),
        ),
    ]
